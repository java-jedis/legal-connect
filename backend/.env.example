# =============================================================================
# Legal Connect Backend Environment Configuration
# Copy this file to .env and update with your actual credentials
# =============================================================================

# Database Configuration
POSTGRES_DB=legalconnect
POSTGRES_USER=root
POSTGRES_PASSWORD=your_secure_database_password

# Spring Boot Configuration
SPRING_JPA_SHOW_SQL=true
SPRING_JPA_GENERATE_DDL=true
SPRING_JPA_HIBERNATE_DDL_AUTO=update

# Elasticsearch Configuration (Optional - remove if no authentication)
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=your_elasticsearch_password
ELASTICSEARCH_CONNECTION_TIMEOUT=5s
ELASTICSEARCH_SOCKET_TIMEOUT=10s

# Mail Configuration
# Update with your SMTP provider details
MAIL_HOST=smtp.your-email-provider.com
MAIL_PORT=587
MAIL_USERNAME=your-email@example.com
MAIL_PASSWORD=your_email_password
MAIL_SMTP_AUTH=true
MAIL_SMTP_STARTTLS_ENABLE=true

# Security Configuration
# Generate a strong JWT secret key (recommended: 256-bit key)
JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_secure_at_least_32_characters
SONAR_TOKEN=your_sonar_cloud_token_here

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_ALLOWED_HEADERS=*
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=3600
CORS_EXPOSED_HEADERS=Authorization,Content-Type,X-Total-Count

# AWS Configuration
# Get these from your AWS IAM console
AWS_ACCESS_KEY=YOUR_AWS_ACCESS_KEY
AWS_SECRET_KEY=YOUR_AWS_SECRET_KEY
AWS_REGION=ap-southeast-2
AWS_S3_BUCKET=your-s3-bucket-name

# Google OAuth Configuration
# Get these from Google Cloud Console
GOOGLE_OAUTH_CLIENT_ID=your-google-oauth-client-id.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_OAUTH_REDIRECT_URI=http://localhost:8080/v1/schedule/oauth/callback
GOOGLE_OAUTH_SCOPE=https://www.googleapis.com/auth/calendar

# Stripe Configuration
# Get these from your Stripe dashboard
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Jitsi JAAS Configuration
# Get these from https://jaas.8x8.vc/#/
JAAS_APP_ID=vpaas-magic-cookie-your-app-id-here
JAAS_API_KEY=vpaas-magic-cookie-your-app-id-here/your-kid-here

# Cloudinary Configuration
# Get these from https://cloudinary.com/
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Application Configuration
API_VERSION=v1
API_NAME=LegalConnect API
SERVER_CONTEXT_PATH=/v1
FRONTEND_URL=http://localhost:5173

# Multipart Configuration
MULTIPART_ENABLED=true
MULTIPART_MAX_REQUEST_SIZE=10MB
MULTIPART_MAX_FILE_SIZE=10MB

# Logging Configuration
LOG_LEVEL_ROOT=INFO
LOG_LEVEL_COM_JAVAJEDIS_LEGALCONNECT=DEBUG
LOG_FILE_NAME=logs/legalconnect.log
LOG_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
LOG_PATTERN_FILE=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Quartz Configuration
QUARTZ_JOB_STORE_TYPE=jdbc
QUARTZ_INITIALIZE_SCHEMA=never

# Swagger Configuration
SWAGGER_UI_PATH=/
SWAGGER_TAGS_SORTER=alpha

# Development/Production Toggle
SPRING_PROFILES_ACTIVE=dev
DEBUG_MODE=true

# Container Resource Limits
JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC

# Health Check Configuration
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=when_authorized