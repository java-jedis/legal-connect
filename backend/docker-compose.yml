version: "3.8"

services:
  db:
    image: postgres:17.5
    container_name: lc_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-legalconnect}
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./legalconnect/src/main/resources/quartz_tables.sql:/docker-entrypoint-initdb.d/10_quartz.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-legalconnect}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - backend-net

  redis:
    image: redis:7
    container_name: lc_redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.1
    container_name: lc_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    mem_limit: 1g
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend-net

  backend:
    image: maven:3.9-eclipse-temurin-21
    container_name: lc_backend
    working_dir: /workspace/backend/legalconnect
    command: ./mvnw spring-boot:run
    environment:
      # Database Configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB:-legalconnect}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-root}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      
      # JPA/Hibernate Configuration
      - SPRING_JPA_SHOW_SQL=${SPRING_JPA_SHOW_SQL:-true}
      - SPRING_JPA_GENERATE_DDL=${SPRING_JPA_GENERATE_DDL:-true}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      
      # Redis Configuration
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      
      # Elasticsearch Configuration
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-}
      - SPRING_ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-}
      - SPRING_ELASTICSEARCH_CONNECTION_TIMEOUT=${ELASTICSEARCH_CONNECTION_TIMEOUT:-5s}
      - SPRING_ELASTICSEARCH_SOCKET_TIMEOUT=${ELASTICSEARCH_SOCKET_TIMEOUT:-10s}
      
      # Mail Configuration
      - SPRING_MAIL_HOST=${MAIL_HOST:-smtp.zoho.com}
      - SPRING_MAIL_PORT=${MAIL_PORT:-587}
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=${MAIL_SMTP_AUTH:-true}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=${MAIL_SMTP_STARTTLS_ENABLE:-true}
      
      # Security Configuration
      - SPRING_CUSTOM_SECURITY_JWTSECRET=${JWT_SECRET}
      - SPRING_CUSTOM_SECURITY_SONAR_TOKEN=${SONAR_TOKEN}
      
      # CORS Configuration
      - SPRING_CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:5173}
      - SPRING_CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS:-GET,POST,PUT,DELETE,OPTIONS,PATCH}
      - SPRING_CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS:-*}
      - SPRING_CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS:-true}
      - SPRING_CORS_MAX_AGE=${CORS_MAX_AGE:-3600}
      - SPRING_CORS_EXPOSED_HEADERS=${CORS_EXPOSED_HEADERS:-Authorization,Content-Type,X-Total-Count}
      
      # AWS Configuration
      - CLOUD_AWS_CREDENTIALS_ACCESSKEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRETKEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION_STATIC=${AWS_REGION:-ap-southeast-2}
      - CLOUD_AWS_S3_BUCKET=${AWS_S3_BUCKET}
      
      # Google OAuth Configuration
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - GOOGLE_OAUTH_REDIRECT_URI=${GOOGLE_OAUTH_REDIRECT_URI:-http://localhost:8080/v1/schedule/oauth/callback}
      - GOOGLE_OAUTH_SCOPE=${GOOGLE_OAUTH_SCOPE:-https://www.googleapis.com/auth/calendar}
      
      # Stripe Configuration
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      
      # Jitsi Configuration
      - JAAS_APP_ID=${JAAS_APP_ID}
      - JAAS_API_KEY=${JAAS_API_KEY}
      
      # Cloudinary Configuration
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      
      # Application Configuration
      - API_VERSION=${API_VERSION:-v1}
      - API_NAME=${API_NAME:-LegalConnect API}
      - SERVER_SERVLET_CONTEXT_PATH=${SERVER_CONTEXT_PATH:-/v1}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:5173}
      
      # Multipart Configuration
      - SPRING_SERVLET_MULTIPART_ENABLED=${MULTIPART_ENABLED:-true}
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=${MULTIPART_MAX_REQUEST_SIZE:-10MB}
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=${MULTIPART_MAX_FILE_SIZE:-10MB}
      
      # Logging Configuration
      - LOGGING_LEVEL_ROOT=${LOG_LEVEL_ROOT:-INFO}
      - LOGGING_LEVEL_COM_JAVAJEDIS_LEGALCONNECT=${LOG_LEVEL_COM_JAVAJEDIS_LEGALCONNECT:-DEBUG}
      - LOGGING_FILE_NAME=${LOG_FILE_NAME:-logs/legalconnect.log}
      - LOGGING_PATTERN_CONSOLE=${LOG_PATTERN_CONSOLE:-%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}
      - LOGGING_PATTERN_FILE=${LOG_PATTERN_FILE:-%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}
      
      # Quartz Configuration
      - SPRING_QUARTZ_JOB_STORE_TYPE=${QUARTZ_JOB_STORE_TYPE:-jdbc}
      - SPRING_QUARTZ_JDBC_INITIALIZE_SCHEMA=${QUARTZ_INITIALIZE_SCHEMA:-never}
      
      # Swagger Configuration
      - SPRINGDOC_SWAGGER_UI_PATH=${SWAGGER_UI_PATH:-/}
      - SPRINGDOC_SWAGGER_UI_TAGS_SORTER=${SWAGGER_TAGS_SORTER:-alpha}
    volumes:
      - ./legalconnect:/workspace/backend/legalconnect
      - ~/.m2:/root/.m2
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - backend-net
    restart: unless-stopped

volumes:
  pg_data:
  redis_data:
  es_data:

networks:
  backend-net:
    driver: bridge 