import{Y as h,Z as u}from"./index-rvQoOiZL.js";const n=[];for(let t=0;t<256;++t)n.push((t+256).toString(16).slice(1));function l(t,e=0){return(n[t[e+0]]+n[t[e+1]]+n[t[e+2]]+n[t[e+3]]+"-"+n[t[e+4]]+n[t[e+5]]+"-"+n[t[e+6]]+n[t[e+7]]+"-"+n[t[e+8]]+n[t[e+9]]+"-"+n[t[e+10]]+n[t[e+11]]+n[t[e+12]]+n[t[e+13]]+n[t[e+14]]+n[t[e+15]]).toLowerCase()}let i;const d=new Uint8Array(16);function p(){if(!i){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");i=crypto.getRandomValues.bind(crypto)}return i(d)}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),c={randomUUID:y};function g(t,e,s){var a;if(c.randomUUID&&!t)return c.randomUUID();t=t||{};const r=t.random??((a=t.rng)==null?void 0:a.call(t))??p();if(r.length<16)throw new Error("Random bytes length must be >= 16");return r[6]=r[6]&15|64,r[8]=r[8]&63|128,l(r)}class w{constructor(){this.baseURL=h.AI_CHAT_BASE_URL,this.apiClient=u.create({baseURL:this.baseURL,timeout:3e4,headers:{"Content-Type":"application/json"}}),this.apiClient.interceptors.request.use(e=>{const s=localStorage.getItem("auth_token");return s?e.headers.Authorization=`Bearer ${s}`:console.warn("⚠️ No JWT token found for AI chat request. Please log in first."),e},e=>Promise.reject(e)),this.apiClient.interceptors.response.use(e=>e,e=>{var s,r,a,o;return((s=e.response)==null?void 0:s.status)===401||((r=e.response)==null?void 0:r.status)===403?console.error("🔒 AI Chat authentication failed. Please log in to use AI chat features."):console.error("🚨 AI Chat API Error:",(a=e.response)==null?void 0:a.status,(o=e.response)==null?void 0:o.statusText),Promise.reject(e)})}async sendMessage(e,s=null,r=null,a=5){try{return(await this.apiClient.post("/chat",{message:e,session_id:s,user_id:r,context_limit:a})).data}catch(o){throw this.handleError(o)}}async searchDocuments(e,s=5,r=.7){try{return(await this.apiClient.post("/search",{query:e,top_k:s,threshold:r})).data}catch(a){throw this.handleError(a)}}async getChatHistory(e){try{return(await this.apiClient.get(`/sessions/${e}/history`)).data}catch(s){throw this.handleError(s)}}async deleteSession(e){try{return(await this.apiClient.delete(`/sessions/${e}`)).data}catch(s){throw this.handleError(s)}}async checkHealth(){try{return(await this.apiClient.get("/health")).data}catch(e){throw this.handleError(e)}}generateSessionId(){return g()}async createSession(e=null,s=null){try{return(await this.apiClient.post("/sessions",{user_id:e,title:s})).data}catch(r){throw this.handleError(r)}}async getSessionInfo(e){try{return(await this.apiClient.get(`/sessions/${e}`)).data}catch(s){throw this.handleError(s)}}async getUserSessions(e,s=20){try{return(await this.apiClient.get(`/users/${e}/sessions`,{params:{limit:s}})).data}catch(r){throw this.handleError(r)}}handleError(e){var s,r;if(e.response){const a=((s=e.response.data)==null?void 0:s.detail)||((r=e.response.data)==null?void 0:r.message)||"An error occurred";return new Error(`AI Chat Service Error: ${a}`)}else return e.request?new Error("AI Chat Service is currently unavailable. Please try again later."):new Error(`Request Error: ${e.message}`)}}const C=new w;export{C as a};
